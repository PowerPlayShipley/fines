# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - master
      - 'releases/**'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'README.md'

jobs:
#  build:
#    if: "!contains(github.event.commits[0].message, '[skip ci]')"
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#        mongodb-version: [ 4.0, 4.2 ]
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          persist-credentials: false
#      - name: Reconfigure git to use HTTP authentication
#        run: >
#          git config --global url."https://github.com/".insteadOf
#          ssh://git@github.com/
#      - name: Start MongoDB ${{ matrix.mongodb-version }}
#        uses: supercharge/mongodb-github-action@1.3.0
#        with:
#          mongodb-version: ${{ matrix.mongodb-version }}
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          always-auth: true
#          node-version: ${{ matrix.node-version }}
#          registry-url: https://registry.npmjs.org
#      - name: Install dependencies
#        run: npm ci
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#      - run: npm run build --if-present
#      - run: npm test
  deploy-docs:
#    needs: build

    runs-on: ubuntu-latest
    if: "!contains(github.event.commits[0].message, '[skip ci]')"

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Generate Swagger UI
        uses: Legion2/swagger-ui-action@v1
        with:
          output: swagger-ui
          spec-file: ./spec/oas.yaml
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: swagger-ui

#  coverage:
#    needs: build
#    runs-on: ubuntu-latest
#    if: "!contains(github.event.commits[0].message, '[skip ci]')"
#
#    strategy:
#      matrix:
#        node-version: [ 16.x ]
#        mongodb-version: [ 4.0, 4.2 ]
#
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          persist-credentials: false
#      - name: Reconfigure git to use HTTP authentication
#        run: >
#          git config --global url."https://github.com/".insteadOf
#          ssh://git@github.com/
#      - name: Start MongoDB ${{ matrix.mongodb-version }}
#        uses: supercharge/mongodb-github-action@1.3.0
#        with:
#          mongodb-version: ${{ matrix.mongodb-version }}
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          always-auth: true
#          node-version: ${{ matrix.node-version }}
#          registry-url: https://registry.npmjs.org
#      - name: Install dependencies
#        run: npm ci
#        env:
#          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
#      - run: npm run build --if-present
#      - run: npm run coverage
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CODECOV_TOKEN }}
#  deploy:
#    needs: coverage
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v3
#        with:
#          # list of Docker images to use as base name for tags
#          images: |
#            ppf/conf
#          tags: |
#            type=ref,event=branch,suffix=${{ env.prefix }}
#            type=ref,event=pr,suffix=${{ env.prefix }}
#            type=semver,pattern={{version}},suffix=${{ env.prefix }}
#            type=semver,pattern={{major}}.{{minor}},suffix=${{ env.prefix }}
#            type=semver,pattern={{major}},suffix=${{ env.prefix }}
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        if: github.event_name != 'pull_request'
#        with:
#          context: .
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          build-args: |
#            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
#            DOCKER_TAG=${{ steps.meta.outputs.tags }}
#            SOURCE_COMMIT=${{ github.sha }}
#            SOURCE_BRANCH=${{ github.ref }}
#            CI=github
